{"remainingRequest":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\src\\components\\contribute-fund.vue?vue&type=style&index=0&id=47361c80&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\src\\components\\contribute-fund.vue","mtime":1645556772416},{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1643127536918},{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1643127554594},{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1643127541279},{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1643127533100},{"path":"C:\\Users\\User\\Documents\\vue-project\\investmentFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1643127543662}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGl0bGUgew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi5zZWxlY3Qgew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgYm9yZGVyOiAycHggc29saWQgI2JjYzFjNDsNCn0NCg=="},{"version":3,"sources":["contribute-fund.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"contribute-fund.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n<b-container>\r\n    <div>\r\n        <div>\r\n            <v-data-table :headers=\"headers\" :items=\"indexSn\" class=\"elevation-1\">\r\n                <template v-slot:top>\r\n                    <v-toolbar flat>\r\n                        <v-toolbar-title>My Contribution</v-toolbar-title>\r\n                        <v-divider class=\"mx-4\" inset vertical></v-divider>\r\n                        <v-spacer></v-spacer>\r\n                        <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n                            <template v-slot:activator=\"{ on, attrs }\">\r\n                                <v-btn color=\"info\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">\r\n                                    <v-icon small class=\"mr-2\">\r\n                                        mdi-plus-box-multiple-outline\r\n                                    </v-icon> Contribute\r\n                                </v-btn>\r\n                            </template>\r\n                            <v-card>\r\n                                <div class=\"title pt-4\">\r\n                                    <span class=\"text-h6\">Contribute </span>\r\n                                </div>\r\n\r\n                                <v-card-text>\r\n                                    <v-container>\r\n                                        <v-row> \r\n                                        <v-col>\r\n                                        <h4>Pay into the following bank details: </h4>\r\n                                                Account Name: <strong>Belmaz Multipurpose Cooperative Society Limited</strong><br/>\r\n                                                Bank Name: <strong>GT Bank Plc</strong><br/>\r\n                                                Account Number: <strong>0672931760</strong><br/>\r\n\r\n                                               <i> Note: After payment click on the contribute button below</i>\r\n\r\n                                        </v-col> \r\n                                            <v-col cols=\"12\">\r\n                                                <b-form-input v-model=\"user_phase\" value=\"\" hidden></b-form-input>\r\n                                            </v-col>                                         \r\n                                            <v-col cols=\"12\">\r\n                                                <b-button v-b-modal.modal-multi-1 style=\"background: #20618c; color: #fff; width: 100%\" @click=\"save\" size=\"lg\">Contribute</b-button>\r\n                                            </v-col>\r\n\r\n                                        </v-row>\r\n                                    </v-container>\r\n                                </v-card-text>\r\n\r\n                            </v-card>\r\n                        </v-dialog>\r\n                       \r\n                    </v-toolbar>\r\n                </template>\r\n               <template v-slot:item.contribution_amount=\"{item}\">\r\n                <div>\r\n                    {{ formatMoney(item.contribution_amount) }}\r\n                </div>\r\n                </template>\r\n                <template v-slot:item.status=\"{item}\">\r\n                <div v-if=\"item.status == 0\">\r\n                   <span style=\"color: red; font-weight: bold\">Not Approved</span>\r\n                </div>\r\n                 <div v-else>\r\n                   <span style=\"color: green; font-weight: bold\"> Approved</span>\r\n                </div>\r\n                </template>\r\n                <template v-slot:item.actions=\"{ item }\">\r\n                    <v-icon small class=\"mr-2\">\r\n                        mdi-dots-horizontal\r\n                    </v-icon>\r\n                </template>\r\n              \r\n            </v-data-table>\r\n\r\n        </div>\r\n        <div>\r\n            <div>\r\n                <b-table striped hover :items=\"items\"></b-table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</b-container>\r\n</template>\r\n\r\n<script>\r\nimport swal from 'sweetalert2';\r\nexport default {\r\n    data: () => ({\r\n        dialog: false,\r\n        dialogDelete: false,\r\n        \r\n        options: [\r\n\r\n         ],      \r\n     \r\n        headers: [{\r\n                text: 'S/N',\r\n                align: 'start',\r\n                sortable: false,\r\n                value: 'sn',\r\n                class: \"orange lighten-5\"\r\n            },\r\n            {\r\n                text: 'Phases Name',\r\n                value: 'phases',\r\n                class: \"orange lighten-5\"\r\n            },\r\n            {\r\n                text: 'Amount',\r\n                value: 'contribution_amount',\r\n                class: \"orange lighten-5\"\r\n            },\r\n            {\r\n                text: 'Status',\r\n                value: 'status',\r\n                class: \"orange lighten-5\"\r\n            },\r\n            \r\n            {\r\n                value: 'id',\r\n                align: ' d-none'\r\n                \r\n            },\r\n            {\r\n                text: '',\r\n                value: 'edit',\r\n                sortable: false,\r\n                class: \"orange lighten-5\"\r\n            },\r\n        ],\r\n        sponsor_n: '',\r\n        desserts: [],\r\n        editedIndex: -1,\r\n        editedItem: {\r\n            sn: [],\r\n            phases: '',\r\n            contribution_amount: '',\r\n            status: '',\r\n            edit: '...',\r\n        },\r\n        defaultItem: {\r\n            sn: [],\r\n            phases: '',\r\n            contribution_amount: '',\r\n            status: '',\r\n            edit: '',\r\n        },\r\n        user_phase: '',\r\n    }),\r\n beforeMount(){\r\n    const list = this.find();\r\n    const dashboard = this.loadDashboard();\r\n    },\r\n\r\n    computed: {\r\n        indexSn() {\r\n            return this.desserts.map((d, index) => ({\r\n                ...d,\r\n                sn: index + 1\r\n            }))\r\n        },\r\n    },\r\n\r\n    watch: {\r\n        dialog(val) {\r\n            val || this.close()\r\n        },\r\n        dialogDelete(val) {\r\n            val || this.closeDelete()\r\n        },\r\n    },\r\n\r\n    methods: {\r\n        formatMoney(num) {\r\n        return Number(num).toLocaleString(\"en-US\", {\r\n            style: \"currency\",\r\n            currency: \"ngn\"\r\n        });\r\n        },\r\n\r\n        initialize() {\r\n            this.desserts = [\r\n            ]\r\n        },\r\n\r\n        close() {\r\n            this.dialog = false\r\n            this.$nextTick(() => {\r\n                this.editedItem = Object.assign({}, this.defaultItem)\r\n                this.editedIndex = -1\r\n            })\r\n        },\r\n\r\n        closeDelete() {\r\n            this.dialogDelete = false\r\n            this.$nextTick(() => {\r\n                this.editedItem = Object.assign({}, this.defaultItem)\r\n                this.editedIndex = -1\r\n            })\r\n        },\r\n    \r\nasync find(){\r\n    try{\r\n   const response = await this.$http.get('/my-contributions', )\r\n   this.desserts = response.data.data;\r\n   this.desserts = [];\r\n   //Getting the data and pushing it into the desserts array for each object in the array \r\n   response.data.data.forEach(el => {\r\n                \r\n            this.desserts.push(\r\n                {\r\n                    id: el.id,         \r\n                    phases: el.phases,\r\n                    contribution_amount:  el.contribution_amount,\r\n                    status:  el.status,\r\n                }\r\n            )\r\n            \r\n   });\r\n    console.log(response);\r\n}catch (err) {\r\n                console.log(err);\r\n            }\r\n},\r\n\r\n async loadDashboard(){\r\n        try{\r\n    const response = await this.$http.get('/dashboard', )\r\n    this.user_phase = response.data.data.user_phase;    \r\n    console.log(response);\r\n        }catch (err) {\r\n                        console.log(err);\r\n            }\r\n        },\r\n       async save() {\r\n            // if (!this.editedItem.loan_amount ) {\r\n            //     swal.fire('Make sure you entered all fields properly', 'error');\r\n            //     return;\r\n            // }\r\n              try {\r\n              //  console.log(this.institution_name, this.institution_code, \"=-------------\")\r\n                const response = await this.$http.post('/contribute-fund', {\r\n                    phase_id: this.user_phase,\r\n                });\r\n\r\n                console.log(response);\r\n                if (response.data.code == '00') {\r\n                    const success_message = response.data.message;\r\n                    const success_status = response.data.success;\r\n                    swal.fire({\r\n                        icon: 'success',\r\n                        title: success_status,\r\n                        text: success_message,\r\n                    });\r\n                } else if(response.data.code == 'E00') {\r\n                    const error_message = response.data.message;\r\n                    const error_status = response.data.success;\r\n                    swal.fire({\r\n                        icon: 'Error',\r\n                        title: error_status,\r\n                        text: error_message,\r\n                    });\r\n                }\r\n                if (this.editedIndex > -1) {\r\n                    Object.assign(this.desserts[this.editedIndex], this.editedItem)\r\n                } else {\r\n                    this.desserts.push(this.editedItem)\r\n                }\r\n\r\n                this.close()\r\n\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n           \r\n\r\n           },\r\n    },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.title {\r\n    text-align: center;\r\n}\r\n.select {\r\n    width: 100%;\r\n    background: #fff;\r\n    border: 2px solid #bcc1c4;\r\n}\r\n</style>\r\n"]}]}